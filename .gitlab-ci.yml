stages:
  # - testing
  # - scanning
  - building
  - deploying

variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  CONTAINER_TAG: 'containe$CI_REGISTRY_IMAGE'
  APP_PORT: 1022
  APP_EXPOSE_PORT: 80

docker-build:
  stage: building
  script:
    - echo "$CI_DEPLOY_PASSWORD $CI_REGISTRY"
    - docker login -u $CI_DEPLOY_USER -p $CI_DEPLOY_PASSWORD $CI_REGISTRY
    - docker build --pull --build-arg LOG_PROVIDER_CREDENTIAL=$AWS_CLOUDWATCH_CONFIG -t $IMAGE_TAG .
    - docker push $IMAGE_TAG
  tags:
    - local
  only:
    - develop
deploy:
  stage: deploying
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - ssh -tt -o StrictHostKeyChecking=no savvycom@10.22.4.168 "./deploy.sh $IMAGE_TAG $APP_PORT $APP_EXPOSE_PORT $CI_DEPLOY_USER $CI_DEPLOY_PASSWORD && exit"
  tags:
    - local
  only:
    - develop
